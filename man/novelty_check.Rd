% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{novelty_check}
\alias{novelty_check}
\title{Locus novelty check}
\usage{
novelty_check(known_loci, query_loci, flanking = 1e+06, pop = "EUR")
}
\arguments{
\item{known_loci}{A data.frame of published loci.}

\item{query_loci}{A data.frame of loci whose novelties are unclear.}

\item{flanking}{A flanking distance.}

\item{pop}{The reference population as for ieugwasr::ld_matrix().}
}
\value{
A data.frame containing nonnovel loci.
}
\description{
This function checks novelty of a list of loci such as pQTLs against a published list.
Both known_loci and list_loci have these variables: chr, pos, uniprot, rsid, prot.
}
\examples{
\dontrun{ 
 options(width=2000)
 suppressMessages(require(dplyr))
 # SCALLOP-INF list
 METAL <- read.delim("~/INF/work/INF1.METAL") \%>\%
          mutate(prot_rsid=paste0(uniprot,"-",rsid),pos=Position)
 # UKB_PPP list
 require(openxlsx)
 # https://www.biorxiv.org/content/biorxiv/
 # early/2022/06/18/2022.06.17.496443/DC2/embed/media-2.xlsx?download=true
 url <- "~/rds/results/public/proteomics/UKB-PPP/sun22.xlsx"
 ST10 <- read.xlsx(url,"ST10",startRow=3) \%>\%
         mutate(uniprot=Target.UniProt,rsid=rsID,prot=Assay.Target) \%>\%
         mutate(prot_rsid=paste0(uniprot,"-",rsid))
 sentinels <- left_join(METAL,ST10,by="prot_rsid") \%>\%
              select(prot_rsid,cis.trans,rsID) \%>\%
              filter(!is.na(rsID))
 inf1 <- c(with(pQTLtools::inf1,uniprot),with(METAL,uniprot)) \%>\%
         unique()
 overlap <- filter(ST10,uniprot \%in\% inf1)
 dim(overlap)
 UKB_PPP <- mutate(overlap,
            chrpos=strsplit(overlap[["Variant.ID.(CHROM:GENPOS.(hg37):A0:A1:imp:v1)"]],":"),
            chr=lapply(chrpos,"[[",1),
            pos=lapply(chrpos,"[[",2),
            chrpos=paste(chr,pos,sep=":"))

 suppressMessages(require(GenomicRanges))
 b <- novelty_check(UKB_PPP,METAL)
 replication <- filter(b,r2>=0.8)
 # Mutual uses of pQTLtools/SCALLOP-INF
 write.table(replication,file="~/INF/work/UKB-PPP.txt",row.names=FALSE,quote=FALSE,sep="\t")
 load("~/INF/work/novel_data.rda")
 prot_rsid <- with(novel_data,paste0(prot,"-",rsid))
 prot_rsid_repl <- with(replication,paste0(query.prot,"-",query.rsid))
 left <- setdiff(prot_rsid,prot_rsid_repl)
 # Housekeeping but somewhat not as practical with single pair
 #  r <- sapply(1:nrow(b),function(x) with(b[x,], ifelse(known.rsid==query.rsid,
         1,ieugwasr::ld_matrix(variants=c(known.rsid,query.rsid),pop="EUR"))))
 suppressMessages(require(LDlinkR))
 # or less tolerant as variants need to be on the same chromosome
 token <- Sys.getenv("LDLINK_TOKEN")
 # r2 <- LDlinkR::LDmatrix(variant_list,pop="CEU",token=token)
 # r2 <- sapply(1:nrow(b),function(x) with(b[x,], ifelse(known.rsid==query.rsid,
         1,LDlinkR::LDpair(known.rsid,query.rsid,pop="CEU",token=token)$r2)))
 # Gene expression
 LDexpress(snps = c("rs345", "rs456"),
                     pop = c("YRI", "CEU"),
                     tissue = c("ADI_SUB", "ADI_VIS_OME"),
                     r2d = "r2",
                     r2d_threshold = "0.1",
                     p_threshold = "0.1",
                     win_size = "500000",
                     genome_build = "grch37",
                     token = token)

# Trait GWAS
}
}
